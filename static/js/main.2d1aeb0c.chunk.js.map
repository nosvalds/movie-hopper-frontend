{"version":3,"sources":["loader-large.png","components/Header.js","components/Loading/Loading.js","components/MovieGoersList/MovieGoersList.js","axios/axios.js","data/actions/state.js","data/actions/api.js","components/MovieGoersList/index.js","components/Footer.js","components/MoviesList/MovieCardHeader.js","components/MoviesList/MoviesList.js","components/MoviesList/index.js","components/ResetButton/ResetButton.js","components/ResetButton/index.js","components/MainPage/MainPage.js","components/MovieRankingList/MoviesRankingList.js","components/MovieRankingList/index.js","components/FourOhFour/FourOhFour.js","App.js","data/initialState.js","data/reducer.js","data/store.js","index.js"],"names":["module","exports","Header","className","href","Jumbotron","id","aria-label","Loading","alt","src","loader","Component","MovieGoersList","this","props","handleMount","movieGoersList","handleSelect","selectedIds","length","ListGroup","map","movieGoer","index","ListGroupItem","active","indexOf","key","onClick","name","axios","create","baseURL","headers","Accept","setMovies","movies","type","compareMovieFrequency","a","b","frequency","connect","state","selectedMovieGoer","person","dispatch","get","then","data","setPeople","getState","selectMovieGoer","peopleIds","movie","sort","join","filter","getMovies","Footer","MovieCardHeader","movieFrequency","numPeopleSelected","Card","MoviesList","CardColumns","i","Body","Title","year","Alert","variant","ResetButton","handleReset","MainPage","Button","size","block","class","icon","faFilm","faUserFriends","MoviesRankingList","FourOhFour","Link","App","exact","path","initialState","loaded","reducer","action","newSelection","existingIndex","findIndex","splice","find","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","d","w","konami","addEventListener","e","slice","doTheThing","hue","last","body","header","time","dt","style","backgroundColor","Math","floor","color","requestAnimationFrame"],"mappings":"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","file":"static/js/main.2d1aeb0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader-large.2151e713.png\";","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nconst Header = () => (\r\n  <a className=\"h1-link\" href=\"#/\">\r\n    <Jumbotron className=\"header\">\r\n      <h1 id=\"main-heading\" className=\"header-h1\" aria-label=\"Movie Hopper App - Find Movies in Common!\">Movie Hopper</h1>\r\n    </Jumbotron >\r\n  </a>\r\n)\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport loader from '../../loader-large.png';\r\n\r\nclass Loading extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"loader\" aria-label=\"Loading...\">\r\n        <img alt=\"Loading\" src={loader} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;","import React, { Fragment, Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem\n} from 'react-bootstrap';\n\nimport Loading from '../Loading/Loading';\n\nclass MovieGoersList extends Component {\n  componentDidMount() {\n    this.props.handleMount()\n  }\n\n  render() {\n    const { movieGoersList, handleSelect, selectedIds } = this.props;\n\n    return (\n      (movieGoersList.length > 0) ? (\n        <Fragment>\n          <h2 className=\"moviegoers-list-title\" aria-label=\"Moviegoers List\">Movie Goers</h2>\n          <ListGroup className=\"p-0 moviegoers-list\">\n            {\n              movieGoersList.map((movieGoer, index) => (\n                <ListGroupItem className=\"moviegoer-card\"\n                  active={selectedIds.indexOf(movieGoer.id) !== -1} // if movieGoer.id is in the selectedId array, then highlight as selected\n                  key={index}\n                  onClick={() => handleSelect(movieGoer.id)}\n                  aria-label={movieGoer.name}\n                >\n                  {movieGoer.name}\n                </ListGroupItem>\n              ))\n            }\n          </ListGroup>\n        </Fragment>\n      ) : (\n          <Loading />\n        )\n    );\n  }\n}\n\nexport default MovieGoersList;","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: (process.env.NODE_ENV === 'production') ? \"https://hopper.developme.space/api/\" : \"http://homestead.test/api/\",\n  headers: {\n    Accept: \"application/json\",\n  }\n})","export const selectMovieGoer = (id) => {\n  return {\n    type: \"SELECT_MOVIEGOER\",\n    id\n  }\n}\n\nexport const setPeople = (data) => {\n  return {\n    type: \"SET_PEOPLE\",\n    data: data\n  }\n}\n\nexport const setMovies = (movies) => {\n  return {\n    type: \"SET_MOVIES\",\n    movies\n  }\n}\n\nexport const clearMovieGoerSelection = () => {\n  return {\n    type: \"CLEAR_ALL\",\n  }\n}\n\nexport const loaded = ({ loaded }) => {\n  return {\n    type: \"LOADED\",\n    loaded: true\n  };\n};","import axios from \"../../axios/axios\"\n\nimport {\n  selectMovieGoer,\n  setPeople,\n  setMovies,\n} from './state'\n\nconst compareMovieFrequency = (a, b) => {\n    const freqA = a.frequency;\n    const freqB = b.frequency;\n\n    let comparison = 0;\n    comparison = freqA < freqB ? 1 : -1;\n    return comparison;\n}\n\nexport const getPeople = () => {\n  return (dispatch) => {\n    axios.get(\"/people\").then(({ data }) => {\n      dispatch(setPeople(data.data))\n    })\n  }\n}\n\nexport const getAllMovies = () => {\n    return (dispatch) => {\n        axios.get(\"/movies\").then(({ data }) => {\n            dispatch(setMovies(data.sort(compareMovieFrequency)))\n        })\n    }\n}\n\n\nexport const getMovies = (id) => (dispatch, getState) => {\n    dispatch(selectMovieGoer(id))\n    let selectedMovieGoers = getState().selectedMovieGoer;\n    let peopleIds = selectedMovieGoers.map(person => person.id);\n\n    // if it's 1 selection query the /people/id route\n    if (peopleIds.length === 1) {\n        axios.get(`/people/${id}`).then(({ data }) => {\n            let movies = data.data.movies.map((movie) => ({ frequency: 1, movie: movie })) // turn into new format of state with frequency\n            dispatch(setMovies(movies.sort(compareMovieFrequency)))\n\n        })\n    } else if (peopleIds.length > 1) {\n        // if it's multiple selections, query the match?people=\"ids\" route\n        axios.get(`/people/match?people=${peopleIds.join(',')}`).then(({ data }) => {\n            dispatch(setMovies(data.data.filter((movie) => (movie.frequency > 1)).sort(compareMovieFrequency))); // if there is more than 1 person selected don't save movies only liked by 1 person to state\n        });\n    }\n    // always \"select\" a moviegoer, could add error handling if the above api calls failed.\n\n}\n","import { connect } from 'react-redux';\r\nimport MovieGoersList from './MovieGoersList';\r\nimport { getPeople } from '../../data/actions/api';\r\nimport { getMovies } from '../../data/actions/api';\r\n\r\nconst mapStateToProps = (state) => {\r\n  let selectedIds = state.selectedMovieGoer.length > 0 ? state.selectedMovieGoer.map((person) => person.id) : \"\";\r\n  return {\r\n    movieGoersList: state.movieGoersList,\r\n    selectedIds,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleMount: () => dispatch(getPeople()),\r\n    handleSelect: (id) => dispatch(getMovies(id)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieGoersList);","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <p className=\"footer\" aria-label=\"Copyright statement\">\r\n    Copyright &copy; 2020 Nik Osvalds, Kieran Cott, Henry Macfarlane, Richard Stibbard\r\n  </p>\r\n)\r\n\r\nexport default Footer;","import React from 'react';\nimport Card from 'react-bootstrap/Card'\n\nconst MovieCardHeader = ({movieFrequency, numPeopleSelected}) => {\n    // if only 1 person is selected, don't show anything about frequency\n    if (numPeopleSelected === 1) { \n      return null\n    } else if (numPeopleSelected === movieFrequency) {\n      return (\n        <Card.Header className=\"movie-card-header\" aria-label={movieFrequency}>\n          You {numPeopleSelected === 2 ? \"both\" : \"all\"} like this movie!\n        </Card.Header>\n      )\n    } else {\n      return (\n        <Card.Header className=\"movie-card-header\" aria-label={movieFrequency}>\n          {movieFrequency} people like this movie!\n        </Card.Header>\n      )\n    }\n  }\n\nexport default MovieCardHeader;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport Alert from 'react-bootstrap/Alert';\nimport MovieCardHeader from './MovieCardHeader';\n\nconst MoviesList = ({ movies, numPeopleSelected }) => (\n  (movies.length > 0) ? (\n    <>\n      <h2 className=\"movies-title\" aria-label=\"Movies\">Movies</h2>\n      <CardColumns className=\"movies-list\" aria-label=\"Movies List\">\n        {movies.map((movie, i) => ( (numPeopleSelected !== 1 && movie.frequency === 1) ? null : // dont show movies that only 1 person likes if multiple people are selected.\n          <Card key={i} className=\"movie-card\">\n            <MovieCardHeader numPeopleSelected={numPeopleSelected} movieFrequency={movie.frequency} />\n            <Card.Body>\n              <Card.Title aria-label={movie.movie.name}>\n                {movie.movie.name}\n              </Card.Title>\n            </Card.Body>\n            <Card.Footer aria-label={movie.movie.year}>\n              {movie.movie.year}\n            </Card.Footer>\n          </Card>\n        ))}\n      </CardColumns>\n    </>\n  ) :\n    (\n      <Alert \n        variant=\"primary\" \n        className=\"instructions\"\n        aria-label=\"Select a person to see their favourite movies. Select multiple people to see movies they have in common!\"\n      >\n        <>\n          { numPeopleSelected > 1 ? \n              \"You don't have any movies in common!\" :\n              \"Select a person to see their favourite movies.\"\n          }\n        </>\n        <br></br>\n        <>\n          { numPeopleSelected < 1 ? \n            \"Select multiple people to see movies they have in common!\" \n            : null\n          }\n        </>\n      </Alert>\n    )\n);\n\n\nexport default MoviesList;","import { connect } from 'react-redux';\nimport MoviesList from './MoviesList';\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies,\n    numPeopleSelected: state.selectedMovieGoer.length,\n  }\n}\n\nexport default connect(mapStateToProps)(MoviesList);","import React from \"react\";\r\n\r\nconst ResetButton = ({ handleReset }) => (\r\n  <div className=\"search-button-container\">\r\n    <button\r\n      className=\"search-button btn btn-dark\"\r\n      onClick={handleReset}\r\n      aria-label=\"Click to clear selection\">\r\n      Clear Selection\r\n      </button>\r\n  </div>\r\n)\r\n\r\nexport default ResetButton;\r\n","import { connect } from 'react-redux';\nimport ResetButton from './ResetButton';\nimport { clearMovieGoerSelection } from '../../data/actions/state';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleReset: () => dispatch(clearMovieGoerSelection())\n  }\n}\n\nexport default connect(\"\", mapDispatchToProps)(ResetButton);","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilm, faUserFriends } from '@fortawesome/free-solid-svg-icons'\n\nconst MainPage = () => (\n    <section className=\"container mt-4 p-4 big-buttons-container\">\n        <a href=\"#/movies\" className=\"m-4\">\n            <Button id=\"movies-btn\" aria-label=\"start with films\" className=\"p-2\" variant=\"primary\" size=\"lg\" block>\n                <span class=\"hover-hide\"><FontAwesomeIcon icon={ faFilm } size=\"6x\" aria-label=\"film reel icon\" /></span>\n            </Button>\n        </a>\n        <a href=\"#/people\" className=\"m-4\">\n            <Button id=\"people-btn\" aria-label=\"start with people\" className=\"p-2\" variant=\"secondary\" size=\"lg\" block>\n            <span class=\"hover-hide\"><FontAwesomeIcon icon={ faUserFriends } size=\"6x\" aria-label=\"people icon\"/></span>\n            </Button>\n        </a>\n    </section>\n)\n\nexport default MainPage;","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport Alert from 'react-bootstrap/Alert';\nimport Loading from '../Loading/Loading';\n\n\nclass MoviesRankingList extends Component {\n  componentDidMount() {\n    this.props.handleMount()\n  }\n\n  render() {\n    const { movies } = this.props;\n  \n    return (\n      (movies.length > 0) ? (\n        <>\n          <h2 className=\"movies-title\" aria-label=\"Movies\">Movies</h2>\n          <CardColumns className=\"movies-list\" aria-label=\"Movies List\">\n            {movies.map((movie, i) => (\n              <Card key={i} className=\"movie-card\">\n                <Card.Header className=\"movie-card-header\" aria-label={ movie.frequency }>\n                  { (movie.frequency === 1 ? \"1 person likes\" : `${movie.frequency} people like`) + \" this movie!\"}\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title aria-label={movie.movie.name}>\n                    {movie.movie.name}\n                  </Card.Title>\n                </Card.Body>\n                <Card.Footer aria-label={movie.movie.year}>\n                  {movie.movie.year}\n                </Card.Footer>\n              </Card>\n            ))}\n          </CardColumns>\n        </>\n      ) :\n      (\n        <>\n          <Loading />\n          <Alert \n            variant=\"primary\" \n            className=\"instructions\"\n            aria-label=\"No favourite movies yet!\"\n          >\n            No favourite movies yet!\n          </Alert>\n        </>\n      )\n    );\n  }\n}\n\nexport default MoviesRankingList;","import { connect } from 'react-redux';\nimport MoviesRankingList from './MoviesRankingList';\nimport { getAllMovies } from '../../data/actions/api';\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleMount: () => dispatch(getAllMovies()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesRankingList);","import React from \"react\";\nimport Alert from 'react-bootstrap/Alert'\n\nconst FourOhFour = () => (\n    <section className=\"container\">\n        <Alert className=\"container m-4 text-center\" variant=\"danger\">\n            Page not found! Head <Alert.Link href=\"/\">home</Alert.Link> to start over.\n        </Alert>\n    </section>\n)\nexport default FourOhFour;","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  } from \"react-router-dom\";\nimport './App.css';\nimport Header from './components/Header';\nimport MovieGoersList from './components/MovieGoersList/';\nimport Footer from './components/Footer';\nimport MoviesList from './components/MoviesList';\nimport ResetButton from './components/ResetButton/';\nimport MainPage from './components/MainPage/MainPage';\nimport MoviesRankingList from './components/MovieRankingList';\nimport FourOhFour from './components/FourOhFour/FourOhFour';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n          <Route exact path=\"/people\">\n            <MovieGoersList />\n            <ResetButton />\n            <MoviesList />\n          </Route>\n          <Route exact path=\"/movies\">\n            <MoviesRankingList />\n          </Route>\n          <FourOhFour />\n        </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const initialState = {\n  selectedMovieGoer: [],\n  movieGoersList: [],\n  movies: [],\n  loaded: false,\n};\n\nexport default initialState;","\nconst selectMovieGoer = (state, action) => {\n  const newSelection = [...state.selectedMovieGoer]\n  const existingIndex = newSelection.findIndex((person) => action.id === person.id)\n  if (existingIndex !== -1) {\n    newSelection.splice(existingIndex, 1)\n  } else {\n    const movieGoer = state.movieGoersList.find((movieGoer) => {\n      return movieGoer.id === action.id;\n    })\n    newSelection.push(movieGoer)\n  }\n  return {\n    ...state,\n    selectedMovieGoer: newSelection\n  }\n}\n\nconst setPeople = (state, action) => {\n  return {\n    ...state,\n    movieGoersList: action.data\n  }\n}\n\nconst setMovies = (state, action) => {\n  return {\n    ...state,\n    movies: action.movies,\n  }\n}\n\n// Reducer function\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_PEOPLE\": return setPeople(state, action);\n    case \"SELECT_MOVIEGOER\": return selectMovieGoer(state, action);\n    case \"SET_MOVIES\": return setMovies(state, action);\n    case \"CLEAR_ALL\": return { // clear selected moviegoers\n      ...state,\n      selectedMovieGoer: [],\n      movies: []\n    };\n    default: return state;\n  }\n}\n\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\n\nimport initialState from './initialState';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk';\n\n  \n  // set up redux dev tools \n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  // store set up\n  const store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  \n  export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from './data/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store } >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// Easter Egg (Konami Code)\n((d, w) => {\n\n  let store = [];\n\n  let konami = [\"ArrowUp\", \"ArrowUp\", \"ArrowDown\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"ArrowLeft\", \"ArrowRight\", \"b\", \"a\"].join(\",\"); // encode the konami codeee\n\n  d.addEventListener(\"keydown\", (e) => {        \n      store.push(e.key); // store the keydown values in an array\n\n      store = store.slice(-10); // only store last 10 values\n\n      if (store.join(\",\") === konami) { // check if the joined store array matches the konami string\n          doTheThing(0); // do THE THING\n      }\n  })\n\n  // doing the thing\n  let hue = 0;\n  let last = 0;\n  const speed = 5000; // for the hue method\n  let body = d.body\n  let header = d.getElementById(\"main-heading\");\n\n  let doTheThing = time => {\n      let dt = time - last;\n      last = time;\n    \n       // using hue\n      hue += dt / speed * 360;\n      body.style.backgroundColor = `hsl(${hue}, 50%, 50%)`;\n      \n      // Text fun\n      if (Math.floor(hue) % 2) {\n          header.style.color = \"white\";\n        } else {\n          header.style.color = \"black\";\n        }\n\n      requestAnimationFrame(doTheThing);\n  };\n\n})(document, window);\n\n"],"sourceRoot":""}